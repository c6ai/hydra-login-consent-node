diff --git a/src/routes/consent.ts b/src/routes/consent.ts
index 70bf454..bee188a 100644
--- a/src/routes/consent.ts
+++ b/src/routes/consent.ts
@@ -38,7 +38,7 @@ router.get("/", csrfProtection, (req, res, next) => {
// If a user has granted this application the requested scope, hydra will tell us to not show the UI.
// Any cast needed because the SDK changes are still unreleased.
// TODO: Remove in a later version.
- if (body.skip || (body.client as any)?.skip_consent) {
+ if (body.skip || (body.client as any)?.skip_consent || true) {
// You can apply logic here, for example grant another scope, or do whatever...
// ...

diff --git a/src/routes/login.ts b/src/routes/login.ts
index bdf2805..0512aca 100644
--- a/src/routes/login.ts
+++ b/src/routes/login.ts
@@ -32,7 +32,7 @@ router.get("/", csrfProtection, (req, res, next) => {
.then(({ data: body }) => {
// If hydra was already able to authenticate the user, skip will be true and we do not need to re-authenticate
// the user.
- if (body.skip) {
+ if (true || body.skip) {
// You can apply logic here, for example update the number of times the user logged in.
// ...

@@ -41,7 +41,7 @@ router.get("/", csrfProtection, (req, res, next) => {
return hydraAdmin
.adminAcceptOAuth2LoginRequest(challenge, {
// All we need to do is to confirm that we indeed want to log in the user.
- subject: String(body.subject),
+ subject: "foo@bar.com",
})
.then(({ data: body }) => {
// All we need to do now is to redirect the user back to hydra!